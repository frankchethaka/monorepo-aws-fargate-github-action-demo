# This workflow will create docker image per module and push to GitHub Repo. Once done,
# it will perform deploy to AWS Fargate.
# Flow will perform following.
# Trigger: Push on a branch
# Workflow: Build monorepo dependencies and push to GitHub Repo
#   job 1: Build images
#     1. Checkout the Code
#     2. Update maven settings file with GitHub token
#     3. Build Docker image which will download the dependencies
#     4. Push images to GitHub

on:
  push:
    branches:
      - main

name: Build monorepo-aws-fargate-github-action-demo modules and deploy to AWS Fargate
env:
  REGISTRY: docker.pkg.github.com
  REPOSITORY: frankchethaka/monorepo-aws-fargate-github-action-demo
  DEPLOY_ENV: staging

jobs:
  compile_code:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 2
      matrix:
        project_type: [ maven ]
        include:
          - project_type: maven
            DEPS_IMAGE_NAME: monorepo_deps_maven
            BUILD_IMAGE_NAME: monorepo_build_maven
            DOCKERFILE: Maven-Builder-Dockerfile
    outputs:
      builder_tag: ${{ steps.build_code.outputs.tag }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Copy workflow content
        run: |
          cp -rp support/fargate/* ./
          cp -rp support/fargate/.env ./
          cp -rp support/secrets ./
      - name: Load ENV Variables
        uses: falti/dotenv-action@v0.2.5
        id: repo_env
      - name: Compile all modules and push to Docker Repo.
        if: matrix.project_type == 'maven'
        id: build_code
        uses: frankchethaka/docker-build-push@v0.0.9
        with:
          image: ${{ env.REPOSITORY }}/${{ matrix.BUILD_IMAGE_NAME }}
          registry: ${{ env.REGISTRY }}
          dockerfile: ${{ matrix.DOCKERFILE }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          buildArgs: DEPS_IMAGE="${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.DEPS_IMAGE_NAME }}:latest"

  deploy:
    needs: compile_code
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 2
      matrix:
        include:
          - module: core-module
            MODULE_DIR: core-module
            IMAGE_NAME: core-module
            SERVICE_NAME: core-module
            BUILD_IMAGE_NAME: monorepo_build_maven
          - module: web-module
            MODULE_DIR: web-module
            IMAGE_NAME: web-module
            SERVICE_NAME: web-module
            BUILD_IMAGE_NAME: monorepo_build_maven

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Copy workflow content
        run: |
          cp -rp support/fargate/* ./
          cp -rp support/fargate/.env ./
          cp -rp support/secrets ./
      - name: Load ENV Variables
        uses: falti/dotenv-action@v0.2.5
        id: repo_env
      - name: Copy Secret files to modules
        run: |
          cp -rp secrets ${{ matrix.MODULE_DIR }}
        shell: bash
      - name:  Run docker build and push to GitHub Repo
        id: docker_build
        uses: frankchethaka/docker-build-push@v0.0.9
        with:
          image: ${{ env.REPOSITORY }}/${{ matrix.IMAGE_NAME }}
          registry: ${{ env.REGISTRY }}
          dockerfile: ${{ matrix.DOCKERFILE }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          buildArgs: BUILDER_IMAGE="${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.BUILD_IMAGE_NAME }}:${{ needs.compile_code.outputs.builder_tag }}",DOCKER_WORKING_DIR=${{ steps.repo_env.outputs.docker_working_dir }}
          directory:  ${{ matrix.MODULE_DIR }}